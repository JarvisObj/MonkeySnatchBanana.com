---
layout: post
title: My own private internet
summary: Using a virtual machine for as a local development and testing environment.
published: false
---

h2. The Problem

Your team is large enough that you have multiple lines of development going on at one time, but you don't have the resources to maintain multiple testing and development environments for each developer. If you follow good development practices, you want to test all code in an environment as close to your production environment as possible before making your changes live. If you have only one ( or horror of horrors no ) development & testing environment, your developers will be bumping up against each other trying to use your limited environment resources. Imagine if you will, a situation where you have 2 developers working on new feature, a developer trying to fix a bug, a front end designer working on new content that needs to be tested in multiple web browsers and a system administrator who needs to upgrade your server to the latest security patches and they all need access to your development environment to verify their changes. Sound like a logistical nightmare? It is. I've been through it and came up with a solution that might work for you.  The simple solution is to give each 'developer' their own environment to work in. The coders can happily hack away on the new features while new content is tested if you have the correct infrastructure in place. The most brute force solution would be to provision additional resources for your team. Each person gets their own Slicehost slice or EC2 environment to work with. Problem solved? Not quite, if you follow that route, you have to make sure that all your code is built using 'development urls and resources' for each person.  If your infrastructure is simple enough, you might be better off creating a 'private internet' for each developer. This post will discuss the basics of what you need to do to get member of your team their own private internet using a virtual machine like VMWare or Virtual Box.

You need to be able to distill your infrastrucure down to a single machine setup; for many web applications this is entirely doable. Even if your production environment runs in a load balanced fashion or with your database running on a seperate server, you can probably make this work. If your production environment consists of a single self contained server then this setup can work for you. Additionally, you have to be able to reproduce your production setup. If you can't reproduce what you are doing in production, you first need to figure out what is needed to reproduce it and work from there.

h2. The Solution

h3. IP Provisioning

Bridged over NAT. 

h3. DNS 

You need to setup a dns server in your new virtual machine. 

h3. Email

